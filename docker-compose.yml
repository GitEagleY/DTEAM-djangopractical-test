version: "3.8"

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    # Remove port exposure for security
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:alpine
    restart: unless-stopped
    # Remove port exposure for security
    # ports:
    #   - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    # Add Redis password protection
    command: redis-server --requirepass ${REDIS_PASSWORD}

  # Remove mailhog in production - use real email service
  # mailhog:
  #   image: mailhog/mailhog
  #   ports:
  #     - "1025:1025"
  #     - "8025:8025"
  #   restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates
    depends_on:
      - web
    restart: unless-stopped

  web:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn CVProject.wsgi:application --bind 0.0.0.0:8000 --workers 4 --worker-class gevent --worker-connections 1000 --max-requests 1000 --max-requests-jitter 100 --timeout 30
      "
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    # Don't expose port directly - use nginx
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    # Add resource limits
    deploy:
      resources:
        limits:
          memory: 1GB
        reservations:
          memory: 512MB

  celery:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A CVProject worker --loglevel=warning --concurrency=4 --max-tasks-per-child=1000
    volumes:
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1GB
        reservations:
          memory: 256MB

  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile.prod
    command: celery -A CVProject beat --loglevel=warning
    volumes:
      - media_volume:/app/media
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512MB
        reservations:
          memory: 128MB

  # Optional: Monitoring
  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume: